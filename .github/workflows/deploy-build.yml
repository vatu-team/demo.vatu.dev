# Vatu Deploy
# Version: 1.0.0

name: Deploy Build

on:
  push:
    branches:
      - 'main'
      - 'fix/deploy-build'
  workflow_dispatch:

jobs:
  # Deploy code to production.
  #
  # Performs the following steps:
  # - Checks out the repository.
  # - Sets up PHP with Composer.
  # - Logs debug information.
  # - Install Composer dependencies with no dev option.
  # - @TODO: Install NPM dependencies.
  # - Make the build directory.
  # - Check built branch exists.
  # - Creating a *--built branch. | Using existing *--built branch
  # - Rsync files to build directory.
  # - Remove `.gitignore` file.
  # - Setup deploy ignore files.
  # - Push build to deployment branch.

  deploy-build:
    name: Deploy Build
    runs-on: ubuntu-latest
    steps:
      - name: "Checks out the repository."
        uses: actions/checkout@v2

      - name: "Sets up PHP with Composer."
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          tools: composer

      - name: "Logs debug information."
        run: |
          php --version
          composer --version

      - name: "Install Composer dependencies with no dev option"
        run: composer install --no-dev --no-interaction --prefer-dist

      - name: "Check built branch exists."
        run: |
           echo "ls_remote=$( git ls-remote --heads "${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}.git" main--built | wc -l )" >> $GITHUB_ENV

      - name: "Creating a `--built` branch."
        if: ${{ env.ls_remote == 0 }}
        uses: actions/checkout@v2
        with:
          ref: main
          path: ./built
        run: |
          cd ${GITHUB_WORKSPACE}/built/
          git checkout --orphan "main--built"
          git rm --cached -r .

      - name: "Using existing `--built` branch."
        uses: actions/checkout@v2
        with:
          ref: main--built
          path: ./built
        if: ${{ env.ls_remote == 1 }}

      - name: "Rsync files to build directory."
        run: |
          rsync --delete -a --exclude={'.git','built/'} "${GITHUB_WORKSPACE}/" "${GITHUB_WORKSPACE}/built/"

      - name: "Remove `.gitignore` file."
        run: rm ${GITHUB_WORKSPACE}/built/.gitignore

      - name: "Setup deploy ignore files."
        run: mv ${GITHUB_WORKSPACE}/built/.deployignore ${GITHUB_WORKSPACE}/built/.gitignore

      - name: Push build to deployment branch.
        run: |
          cd ${GITHUB_WORKSPACE}/built/
          git config --global user.name '${{ github.event.pusher.name }}'
          git config --global user.email '${{ github.event.pusher.email }}'
          git add -A
          MESSAGE=$( printf 'Build changes from %s\n\n%s' "${GITHUB_SHA}" "${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}" )
          git commit --author="${{ github.event.pusher.name }} <${{ github.event.pusher.email }}>" -m "${MESSAGE}"
          git push
