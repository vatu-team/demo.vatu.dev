# Vatu QA Sniffs
# Version: 0.1.0

name: qa-php-tests

on:
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:

jobs:

  # Performs code sniffer checks against our codebase.
  #
  # Performs the following steps:
  # - Checks out the repository.
  # - Sets up Caching.
  # - Sets up PHP with Composer.
  # - Install Composer dependencies for tool.
  # - Logs PHPCS debug information.
  # - Run PHPCS on project specific files.
  phpcs:
    name: "Run PHP Code Sniffer"
    runs-on: ubuntu-latest
    steps:

      - name: "Checks out the repository."
        uses: "actions/checkout@v2"

      - name: "Sets up Caching."
        uses: "actions/cache@v2.1.6"
        with:
          path: |
            "$HOME/vendor"
            "$HOME/tools/phpcs/vendor"
            "$HOME/tools/phpcpd/vendor"
            "$HOME/tools/phpmd/vendor"
            "$HOME/tools/phpmnd/vendor"
          key: "${{ runner.os }}-php-composer-${{ hashFiles('**/composer.json') }}"
          restore-keys: "${{ runner.os }}-php-composer-"

      - name: "Sets up PHP with Composer."
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          tools: composer
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Install Composer dependencies for tool."
        run: composer install

      - name: "Logs debug information."
        run: |
          php --version
          composer --version
          php ./tools/phpcs/vendor/bin/phpcs -i

      - name: "Run PHPCS on project specific files."
        run: php ./tools/phpcs/vendor/bin/phpcs -p -s -v --standard=./phpcs.xml --runtime-set testVersion 7.3

  # Performs Copy Paste Detector against our codebase.
  #
  # Performs the following steps:
  # - Checks out the repository.
  # - Sets up Caching.
  # - Sets up PHP with Composer.
  # - Install Composer dependencies for tool.
  # - Logs debug information.
  # - Run PHPCPD on project specific files.
  phpcpd:
    name: "Run PHP Copy Paste Detector"
    runs-on: ubuntu-latest
    steps:

      - name: "Checks out the repository."
        uses: "actions/checkout@v2"

      - name: "Sets up Caching."
        uses: "actions/cache@v2.1.6"
        with:
          path: |
            "$HOME/vendor"
            "$HOME/tools/phpcs/vendor"
            "$HOME/tools/phpcpd/vendor"
            "$HOME/tools/phpmd/vendor"
            "$HOME/tools/phpmnd/vendor"
          key: "${{ runner.os }}-php-composer-${{ hashFiles('**/composer.json') }}"
          restore-keys: "${{ runner.os }}-php-composer-"

      - name: "Sets up PHP with Composer."
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          tools: composer
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Install Composer dependencies for tool."
        run: composer install

      - name: "Logs debug information."
        run: |
          php --version
          composer --version
          php ./tools/phpcpd/vendor/bin/phpcpd --version

      - name: "Run PHPCPD on project specific files."
        run: |
          php ./tools/phpcpd/vendor/bin/phpcpd ./public/app/themes/demo/ --exclude=./vendor/*,./node_modules/*

  # Performs PHP Mess Detector against our codebase.
  #
  # Performs the following steps:
  # - Checks out the repository.
  # - Sets up Caching.
  # - Sets up PHP with Composer.
  # - Install Composer dependencies for tool.
  # - Logs debug information.
  # - Run PHPMD on project specific files.
  phpmd:
    name: "Run PHP Mess Detector"
    runs-on: ubuntu-latest
    steps:

      - name: "Checks out the repository."
        uses: "actions/checkout@v2"

      - name: "Sets up Caching."
        uses: "actions/cache@v2.1.6"
        with:
          path: |
            "$HOME/vendor"
            "$HOME/tools/phpcs/vendor"
            "$HOME/tools/phpcpd/vendor"
            "$HOME/tools/phpmd/vendor"
            "$HOME/tools/phpmnd/vendor"
          key: "${{ runner.os }}-php-composer-${{ hashFiles('**/composer.json') }}"
          restore-keys: "${{ runner.os }}-php-composer-"

      - name: "Sets up PHP with Composer."
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          tools: composer
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Install Composer dependencies for tool."
        run: composer install

      - name: "Logs debug information."
        run: |
          php --version
          composer --version
          php ./tools/phpmd/vendor/bin/phpmd --version

      - name: "Run PHPMD on project specific files."
        run: |
          php ./tools/phpmd/vendor/bin/phpmd ./public/app/themes/demo/ text ./phpmd.xml

  # Performs PHP Magic Number Detector against our codebase.
  #
  # Performs the following steps:
  # - Checks out the repository.
  # - Sets up Caching.
  # - Sets up PHP with Composer.
  # - Install Composer dependencies for tool.
  # - Logs debug information.
  # - Run PHPMND on project specific files.
  phpmnd:
    name: "Run PHP Magic Numbers Detector"
    runs-on: ubuntu-latest
    steps:

      - name: "Checks out the repository."
        uses: "actions/checkout@v2"

      - name: "Sets up Caching."
        uses: "actions/cache@v2.1.6"
        with:
          path: |
            "$HOME/vendor"
            "$HOME/tools/phpcs/vendor"
            "$HOME/tools/phpcpd/vendor"
            "$HOME/tools/phpmd/vendor"
            "$HOME/tools/phpmnd/vendor"
          key: "${{ runner.os }}-php-composer-${{ hashFiles('**/composer.json') }}"
          restore-keys: "${{ runner.os }}-php-composer-"

      - name: "Sets up PHP with Composer."
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          tools: composer
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Install Composer dependencies for tool."
        run: composer install

      - name: "Logs debug information."
        run: |
          php --version
          composer --version
          php ./tools/phpmnd/vendor/bin/phpmnd --version

      - name: "Run PHPMND on project specific files."
        run: |
          php ./tools/phpmnd/vendor/bin/phpmnd ./public/app/themes/demo --ignore-funcs=round,sleep --exclude=./vendor/ --exclude=./node_modules/ --progress
